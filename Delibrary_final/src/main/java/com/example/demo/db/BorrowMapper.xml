<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="borrow">
	
	<insert id="insertBorrow" parameterType="borrowVO">
		insert into borrow(bor_no,cust_no,b_no)
		values(#{bor_no},#{cust_no},#{b_no})
	</insert>
	<!-- <delete id="deleteBorrow" parameterType="borrowVO"> delete borrow where 
		BOR_NO=#{BOR_NO} </delete> -->
	<select id="getNextNo" resultType="java.lang.Integer">
		select nvl(max(bor_no),0)+1 from borrow
	</select>

	<!-- 
	<update id="updateBorrow">
		update Borrow set B_COUNT=#{B_COUNT}-1 where B_NO=#{B_NO}
	</update>
	 -->
	<!-- 북카트 list-->
	 <select id="selectBycust_No" resultType="borrowVO2">
    SELECT
    b.b_title, 
    b.b_image,
    b.b_publisher,
    b.b_writer,
    b.b_price, 
    b.b_detail,
    b.b_year,
    a.bor_no,
    a.b_no,
	a.bor_date,
	a.return_date,
	a.return_ok,
	a.cust_no
	FROM borrow a, book b where a.b_no = b.b_no and cust_no = #{cust_no}
	and bor_date is null
		
    	
  </select> 
  
 


  
  		<!-- 대출현황 list-->	 
  	 <select id="selectBycust_No2" resultType="borrowVO2">
  	 
    SELECT
    *
	FROM (select rownum n, q.* from (select distinct b.b_title, 
    b.b_image,
    b.b_publisher,
    b.b_writer,
    b.b_price, 
    b.b_detail,
    b.b_year,
    a.bor_no,
    a.b_no,
	a.bor_date,
	a.return_date,
	a.return_ok,
	a.cust_no from borrow a, book b where a.b_no = b.b_no and cust_no = #{cust_no} and bor_date is not null
   	and return_ok like 'N' AND return_date > sysdate 	
   	order by bor_no desc)q) where n between #{start} and #{end}	 
  </select>
  <!-- 대출반납 list-->	 
  	 <select id="selectBycust_No3" resultType="borrowVO2">
  	 
    SELECT
    *
	FROM (select rownum n, q.* from (select distinct b.b_title, 
    b.b_image,
    b.b_publisher,
    b.b_writer,
    b.b_price, 
    b.b_detail,
    b.b_year,
    a.bor_no,
    a.b_no,
	a.bor_date,
	a.return_date,
	a.return_ok,
	a.cust_no from borrow a, book b where a.b_no = b.b_no and cust_no = #{cust_no} and bor_date is not null
    and sysdate > return_date 
    order by bor_no desc)q) where n between #{start} and #{end}	 
  </select>
  <!-- 대출반납 list Count-->	 
  	 <select id="selectBycust_No3_count" resultType="borrowVO2">
  	 
    SELECT
    count(*)
	FROM (select rownum n, q.* from (select distinct b.b_title, 
    b.b_image,
    b.b_publisher,
    b.b_writer,
    b.b_price, 
    b.b_detail,
    b.b_year,
    a.bor_no,
    a.b_no,
	a.bor_date,
	a.return_date,
	a.return_ok,
	a.cust_no from borrow a, book b where a.b_no = b.b_no and cust_no = #{cust_no} and bor_date is not null
    and sysdate > return_date 
    order by bor_no desc)q) where n between #{start} and #{end}	 
  </select>
  
  
   <update id="updateBorrow">
  	update borrow set bor_date=#{bor_date}, return_date=#{return_date}, return_ok=#{return_ok}, b_no=#{b_no}, cust_no=#{cust_no}  where bor_no=#{bor_no}
  </update>
  <delete id="deleteBorrow">
  	DELETE FROM BORROW WHERE bor_no=#{bor_no}
  </delete>
  	<!-- 사용자가 대여한 수량  -->
    <select id="calB_no" resultType="java.lang.Integer">
	select count(b_no) from BORROW where cust_no=#{cust_no}
	</select>
	
	
  	<!-- 페이징처리 total 대출중인 대여목록[용택] -->
  	  
  	<select id ="getTotalCount2" resultType="java.lang.Integer">
  		select count(*) from borrow where return_ok like 'N' and  
   			return_date > sysdate and cust_no = #{cust_no}
  	</select>
  	
 	<!-- 페이징처리 total 대출한 대여목록[용택] -->
	 <select id ="getTotalCount3" resultType="java.lang.Integer">
  		select count(*) from borrow where cust_no = #{cust_no} 
  		and sysdate > return_date
  	</select>
 
	
	 
	<!-- 모든 정보 가져오기[재성] -->
	<select id="findAll" resultType="borrowVO">
		select * from borrow
	</select>
	 <!-- 전체 게시글 수를 구하는 sql문 -->
    <select id="getTotalCount" resultType="java.lang.Integer">
        select count(*) from
        borrow
    </select>







  <!-- select * from (select rownum n, q.* from (select * from post where p_no like '40%' and p_title like '%페이징%' order by p_id desc)q) where n between 1 and 10; -->
     <select id="selectAll" resultType="postVO">
       select * from (select rownum n, q.* from (select * from post where p_no like '40%' 
      <if test="search != null and search != '' and option != null and option != ''">
          and ${option} like '%'||#{search}||'%' 
       </if>
       order by p_no desc) q) where n between #{start} and #{end}
    </select>  










</mapper>

